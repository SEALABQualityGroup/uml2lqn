rule Model2Schema 
	transform s : UML!Model
	to t : LQN!LqnModelType
	{
		t.name = s.name;
		t.processor ::= UML!Device.all();
	}
	
rule Device2Processor
	transform s: UML!Device
	to t: LQN!ProcessorType
	{
		// All the "deployment" relationships of s
		var deps = s.getDependencies();
		
		t.name = s.name;
		t.task ::= deps;	
	}
	
rule Lifeline2Task 
	transform s: UML!Deployment
	to t: LQN!TaskType 
	{	
		// Each "deployment" dependency has only one target (i.e., deployment artifact)
		var artif = s.deployedArtifacts.first();		
		var manif = artif.getArtifactManif();
		var prop = manif.getProperties();
		t.name = prop.name;
		prop.upper.type().println();	
		t.multiplicity = prop.upper.toString();	
	}	
	
// It returns all the dependencies having the "self" UML!Node as a client.
operation  UML!NamedElement getDependencies(): Sequence
{	
	return UML!Dependency.all.select(i|i.client.includes(self));
} 

// It returns the element represented by an Artifact in the Deployment View
operation UML!Artifact getArtifactManif(): UML!NamedElement
{
	// All the manifestations of the artifact self
	var manif = self.getDependencies().first();
	// Unique supplier of the manifestation;
	return manif.supplier.first();
}

operation UML!Class getProperties(): UML!Property
{
	var props = UML!Property.all();
	return props.select(i | i.type = self).first;
}


